{"version":3,"sources":["components/SalesForm.js","services/apiService.js","components/SalesTable.js","components/ProductResearch.js","App.js","index.js"],"names":["SalesForm","_ref","onSubmit","item","setItem","useState","price","setPrice","soldDate","setSoldDate","_jsxs","e","preventDefault","children","_jsx","htmlFor","type","id","value","onChange","target","required","API_BASE_URL","apiService","createSale","async","axios","post","saleData","data","error","response","message","getSales","get","updateSale","saleId","put","SalesTable","sales","setSales","useEffect","console","fetchSales","map","sale","Date","toLocaleDateString","onClick","deleteSale","filter","handleDelete","ProductResearch","products","setProducts","loading","setLoading","setError","err","fetchProducts","product","name","soldPrice","App","Router","className","Switch","Route","path","exact","component","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01e59822.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst SalesForm = ({ onSubmit }) => {\n    const [item, setItem] = useState('');\n    const [price, setPrice] = useState('');\n    const [soldDate, setSoldDate] = useState('');\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const saleData = { item, price, soldDate };\n        onSubmit(saleData);\n        setItem('');\n        setPrice('');\n        setSoldDate('');\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <div>\n                <label htmlFor=\"item\">Item:</label>\n                <input\n                    type=\"text\"\n                    id=\"item\"\n                    value={item}\n                    onChange={(e) => setItem(e.target.value)}\n                    required\n                />\n            </div>\n            <div>\n                <label htmlFor=\"price\">Price:</label>\n                <input\n                    type=\"number\"\n                    id=\"price\"\n                    value={price}\n                    onChange={(e) => setPrice(e.target.value)}\n                    required\n                />\n            </div>\n            <div>\n                <label htmlFor=\"soldDate\">Sold Date:</label>\n                <input\n                    type=\"date\"\n                    id=\"soldDate\"\n                    value={soldDate}\n                    onChange={(e) => setSoldDate(e.target.value)}\n                    required\n                />\n            </div>\n            <button type=\"submit\">Submit Sale</button>\n        </form>\n    );\n};\n\nexport default SalesForm;","import axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:5000/api'; // Adjust the base URL as needed\n\nconst apiService = {\n    createSale: async (saleData) => {\n        try {\n            const response = await axios.post(`${API_BASE_URL}/sales`, saleData);\n            return response.data;\n        } catch (error) {\n            throw error.response ? error.response.data : error.message;\n        }\n    },\n\n    getSales: async () => {\n        try {\n            const response = await axios.get(`${API_BASE_URL}/sales`);\n            return response.data;\n        } catch (error) {\n            throw error.response ? error.response.data : error.message;\n        }\n    },\n\n    updateSale: async (saleId, saleData) => {\n        try {\n            const response = await axios.put(`${API_BASE_URL}/sales/${saleId}`, saleData);\n            return response.data;\n        } catch (error) {\n            throw error.response ? error.response.data : error.message;\n        }\n    },\n\n    // Additional API methods can be added here\n};\n\nexport default apiService;","import React, { useEffect, useState } from 'react';\nimport apiService from '../services/apiService';\n\nconst SalesTable = () => {\n    const [sales, setSales] = useState([]);\n\n    useEffect(() => {\n        const fetchSales = async () => {\n            try {\n                const response = await apiService.getSales();\n                setSales(response.data);\n            } catch (error) {\n                console.error('Error fetching sales data:', error);\n            }\n        };\n\n        fetchSales();\n    }, []);\n\n    const handleDelete = async (id) => {\n        try {\n            await apiService.deleteSale(id);\n            setSales(sales.filter(sale => sale.id !== id));\n        } catch (error) {\n            console.error('Error deleting sale:', error);\n        }\n    };\n\n    return (\n        <div>\n            <h2>Sales Table</h2>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Item</th>\n                        <th>Price</th>\n                        <th>Sold Date</th>\n                        <th>Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {sales.map(sale => (\n                        <tr key={sale.id}>\n                            <td>{sale.item}</td>\n                            <td>{sale.price}</td>\n                            <td>{new Date(sale.soldDate).toLocaleDateString()}</td>\n                            <td>\n                                <button onClick={() => handleDelete(sale.id)}>Delete</button>\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default SalesTable;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst ProductResearch = () => {\n    const [products, setProducts] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const fetchProducts = async () => {\n            try {\n                const response = await axios.get('/api/products/research');\n                setProducts(response.data);\n            } catch (err) {\n                setError(err.message);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchProducts();\n    }, []);\n\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n    if (error) {\n        return <div>Error: {error}</div>;\n    }\n\n    return (\n        <div>\n            <h2>Product Research</h2>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Product Name</th>\n                        <th>Sold Price</th>\n                        <th>Sold Date</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {products.map((product) => (\n                        <tr key={product.id}>\n                            <td>{product.name}</td>\n                            <td>{product.soldPrice}</td>\n                            <td>{product.soldDate}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default ProductResearch;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport SalesForm from './components/SalesForm';\nimport SalesTable from './components/SalesTable';\nimport ProductResearch from './components/ProductResearch';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/\" exact component={SalesTable} />\n          <Route path=\"/add-sale\" component={SalesForm} />\n          <Route path=\"/product-research\" component={ProductResearch} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}