{
  "openapi": "3.0.1",
  "info": {
    "title": "ListFlowHQ API",
    "version": "1.0.0",
    "description": "Consolidated API specification for the ListFlowHQ backend (formerly eBay Sales Tool). This file is generated; edit fragment .swagger.json files under backend/src/swagger and run generate_swagger.js."
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Local development"
    }
  ],
  "paths": {
    "/api/listings/status/workflow": {
      "get": {
        "summary": "Get status workflow graph",
        "tags": [
          "Listing"
        ],
        "responses": {
          "200": {
            "description": "Workflow graph",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusWorkflowGraph"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Update status workflow graph",
        "tags": [
          "Listing"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusWorkflowGraphUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Invalid graph",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/ebay/metrics": {
      "get": {
        "summary": "Get eBay integration metrics snapshot",
        "tags": [
          "eBay Admin"
        ],
        "responses": {
          "200": {
            "description": "Metrics object"
          }
        }
      }
    },
    "/api/admin/ebay/health": {
      "get": {
        "summary": "Get eBay integration health summary",
        "tags": [
          "eBay Admin"
        ],
        "responses": {
          "200": {
            "description": "Health summary"
          }
        }
      }
    },
    "/api/admin/ebay/transactions": {
      "get": {
        "summary": "List transaction log entries (filterable)",
        "tags": [
          "eBay Admin"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "channel",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "operation",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ebay_listing_id",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "from",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "to",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "format",
            "schema": {
              "type": "string",
              "enum": [
                "json",
                "csv"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction list or CSV"
          }
        }
      }
    },
    "/api/admin/ebay/queue": {
      "get": {
        "summary": "List change queue items",
        "tags": [
          "eBay Admin"
        ],
        "responses": {
          "200": {
            "description": "Queue items"
          }
        }
      }
    },
    "/api/admin/ebay/queue/{id}/retry": {
      "post": {
        "summary": "Retry a failed/dead queue item",
        "tags": [
          "eBay Admin"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retried"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/admin/ebay/queue/dead-letter": {
      "get": {
        "summary": "List dead queue & failed events",
        "tags": [
          "eBay Admin"
        ],
        "responses": {
          "200": {
            "description": "Dead letters"
          }
        }
      }
    },
    "/api/admin/ebay/failed-events/{id}/replay": {
      "post": {
        "summary": "Replay a failed event",
        "tags": [
          "eBay Admin"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Replayed"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/admin/ebay/snapshots": {
      "get": {
        "summary": "List listing snapshots",
        "tags": [
          "eBay Admin"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "ebay_listing_id",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Snapshots"
          }
        }
      }
    },
    "/api/admin/ebay/snapshots/{id}": {
      "get": {
        "summary": "Get a snapshot by id",
        "tags": [
          "eBay Admin"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Snapshot"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/admin/ebay/snapshots/{a}/diff/{b}": {
      "get": {
        "summary": "Diff two snapshots",
        "tags": [
          "eBay Admin"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "a",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "b",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Diff result"
          }
        }
      }
    },
    "/api/admin/ebay/sync/logs": {
      "get": {
        "summary": "List sync log entries",
        "tags": [
          "eBay Admin"
        ],
        "responses": {
          "200": {
            "description": "Logs"
          }
        }
      }
    },
    "/api/admin/ebay/policies": {
      "get": {
        "summary": "List cached policies",
        "tags": [
          "eBay Admin"
        ],
        "responses": {
          "200": {
            "description": "Policies"
          }
        }
      }
    },
    "/api/admin/ebay/drift-events": {
      "get": {
        "summary": "List drift events",
        "tags": [
          "eBay Admin"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "classification",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "listingId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "fromMs",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "toMs",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Drift events"
          }
        }
      }
    },
    "/api/admin/ebay/drift-events/summary": {
      "get": {
        "summary": "Drift classification counts",
        "tags": [
          "eBay Admin"
        ],
        "responses": {
          "200": {
            "description": "Counts"
          }
        }
      }
    },
    "/api/admin/ebay/drift-events/retention/run": {
      "post": {
        "summary": "Trigger drift retention cleanup",
        "tags": [
          "eBay Admin"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "retentionDays": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Retention result"
          }
        }
      }
    },
    "/api/auth/roles": {
      "get": {
        "summary": "Get all roles",
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "List of roles"
          }
        }
      },
      "post": {
        "summary": "Create a new role",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Role created"
          },
          "400": {
            "description": "Validation error"
          }
        }
      }
    },
    "/api/auth/roles/{id}": {
      "put": {
        "summary": "Update a role",
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Role updated"
          },
          "404": {
            "description": "Role not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a role",
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Role deleted"
          },
          "404": {
            "description": "Role not found"
          }
        }
      }
    },
    "/api/auth/pages": {
      "get": {
        "summary": "Get all pages",
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "List of pages"
          }
        }
      },
      "post": {
        "summary": "Create a new page",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Page created"
          },
          "400": {
            "description": "Validation error"
          }
        }
      }
    },
    "/api/auth/role-page-access": {
      "get": {
        "summary": "Get the role-page access matrix",
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "Access matrix"
          }
        }
      },
      "post": {
        "summary": "Create a new role-page access entry",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "role_id": {
                    "type": "integer"
                  },
                  "page_id": {
                    "type": "integer"
                  },
                  "can_view": {
                    "type": "boolean"
                  },
                  "can_edit": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Access entry created"
          },
          "400": {
            "description": "Validation error"
          }
        }
      }
    },
    "/api/auth/role-page-access/{id}": {
      "put": {
        "summary": "Update a role-page access entry",
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "can_view": {
                    "type": "boolean"
                  },
                  "can_edit": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Access entry updated"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a role-page access entry",
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Access entry deleted"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/auth/users": {
      "get": {
        "summary": "Get all users",
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "List of users"
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password_hash": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "role_id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created"
          },
          "400": {
            "description": "Validation error"
          }
        }
      }
    },
    "/api/auth/users/{id}": {
      "put": {
        "summary": "Update a user",
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a user",
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/appconfig": {
      "get": {
        "summary": "Get all app config records",
        "tags": [
          "AppConfig"
        ],
        "responses": {
          "200": {
            "description": "List of app config records",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppConfigArray"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create an app config record",
        "tags": [
          "AppConfig"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppConfig"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/appconfig/{id}": {
      "get": {
        "summary": "Get an app config record by ID",
        "tags": [
          "AppConfig"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "App config record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppConfig"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "put": {
        "summary": "Update an app config record",
        "tags": [
          "AppConfig"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "summary": "Delete an app config record",
        "tags": [
          "AppConfig"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/catalog": {
      "get": {
        "summary": "Get all catalog items",
        "tags": [
          "Catalog"
        ],
        "responses": {
          "200": {
            "description": "List of catalog items",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogArray"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a catalog item",
        "tags": [
          "Catalog"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Catalog"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/catalog/{id}": {
      "get": {
        "summary": "Get a catalog item by ID",
        "tags": [
          "Catalog"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Catalog item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Catalog"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "put": {
        "summary": "Update a catalog item",
        "tags": [
          "Catalog"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Catalog"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a catalog item",
        "tags": [
          "Catalog"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/communicationlogs": {
      "get": {
        "summary": "Get all communication logs",
        "tags": [
          "CommunicationLogs"
        ],
        "responses": {
          "200": {
            "description": "List of communication logs",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommunicationLogsArray"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a communication log",
        "tags": [
          "CommunicationLogs"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommunicationLogs"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/communicationlogs/{id}": {
      "get": {
        "summary": "Get a communication log by ID",
        "tags": [
          "CommunicationLogs"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Communication log",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommunicationLogs"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "put": {
        "summary": "Update a communication log",
        "tags": [
          "CommunicationLogs"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommunicationLogs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a communication log",
        "tags": [
          "CommunicationLogs"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/customer": {
      "get": {
        "summary": "Get all customers",
        "tags": [
          "Customer"
        ],
        "responses": {
          "200": {
            "description": "List of customers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerArray"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a customer",
        "tags": [
          "Customer"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/customer/{id}": {
      "get": {
        "summary": "Get a customer by ID",
        "tags": [
          "Customer"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "put": {
        "summary": "Update a customer",
        "tags": [
          "Customer"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a customer",
        "tags": [
          "Customer"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/database_configuration": {
      "get": {
        "summary": "Get all database configuration records",
        "tags": [
          "DatabaseConfiguration"
        ],
        "responses": {
          "200": {
            "description": "List of database configuration records",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseConfigurationArray"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a database configuration record",
        "tags": [
          "DatabaseConfiguration"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatabaseConfiguration"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/database_configuration/{id}": {
      "get": {
        "summary": "Get a database configuration record by ID",
        "tags": [
          "DatabaseConfiguration"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Database configuration record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseConfiguration"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "put": {
        "summary": "Update a database configuration record",
        "tags": [
          "DatabaseConfiguration"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatabaseConfiguration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a database configuration record",
        "tags": [
          "DatabaseConfiguration"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/ebayinfo": {
      "get": {
        "summary": "Get all eBay info records",
        "tags": [
          "EbayInfo"
        ],
        "responses": {
          "200": {
            "description": "List of eBay info records",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EbayInfoArray"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create an eBay info record",
        "tags": [
          "EbayInfo"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EbayInfo"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/ebayinfo/{id}": {
      "get": {
        "summary": "Get an eBay info record by ID",
        "tags": [
          "EbayInfo"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "eBay info record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EbayInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "put": {
        "summary": "Update an eBay info record",
        "tags": [
          "EbayInfo"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EbayInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "summary": "Delete an eBay info record",
        "tags": [
          "EbayInfo"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/financialtracking": {
      "get": {
        "summary": "Get all financial tracking records",
        "tags": [
          "FinancialTracking"
        ],
        "responses": {
          "200": {
            "description": "List of financial tracking records",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialTrackingArray"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a financial tracking record",
        "tags": [
          "FinancialTracking"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialTracking"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/financialtracking/{id}": {
      "get": {
        "summary": "Get a financial tracking record by ID",
        "tags": [
          "FinancialTracking"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Financial tracking record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialTracking"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "put": {
        "summary": "Update a financial tracking record",
        "tags": [
          "FinancialTracking"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialTracking"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a financial tracking record",
        "tags": [
          "FinancialTracking"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/listing": {
      "get": {
        "summary": "Get all listings",
        "tags": [
          "Listing"
        ],
        "responses": {
          "200": {
            "description": "List of listings",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListingArray"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a listing",
        "tags": [
          "Listing"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Listing"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/listing/{id}": {
      "get": {
        "summary": "Get a listing by ID",
        "tags": [
          "Listing"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Listing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Listing"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "put": {
        "summary": "Update a listing",
        "tags": [
          "Listing"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Listing"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a listing",
        "tags": [
          "Listing"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/orderdetails": {
      "get": {
        "summary": "Get all order details records",
        "tags": [
          "OrderDetails"
        ],
        "responses": {
          "200": {
            "description": "List of order details records",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDetailsArray"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create an order details record",
        "tags": [
          "OrderDetails"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderDetails"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/orderdetails/{id}": {
      "get": {
        "summary": "Get an order details record by ID",
        "tags": [
          "OrderDetails"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order details record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "put": {
        "summary": "Update an order details record",
        "tags": [
          "OrderDetails"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderDetails"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "summary": "Delete an order details record",
        "tags": [
          "OrderDetails"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/ownership": {
      "get": {
        "summary": "Get all ownership records",
        "tags": [
          "Ownership"
        ],
        "responses": {
          "200": {
            "description": "List of ownership records",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OwnershipArray"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create an ownership record",
        "tags": [
          "Ownership"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ownership"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/ownership/{id}": {
      "get": {
        "summary": "Get an ownership record by ID",
        "tags": [
          "Ownership"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ownership record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ownership"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "put": {
        "summary": "Update an ownership record",
        "tags": [
          "Ownership"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ownership"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "summary": "Delete an ownership record",
        "tags": [
          "Ownership"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/ownershipagreements": {
      "get": {
        "summary": "Get all ownership agreements",
        "tags": [
          "OwnershipAgreements"
        ],
        "responses": {
          "200": {
            "description": "List of ownership agreements",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OwnershipAgreementsArray"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create an ownership agreement",
        "tags": [
          "OwnershipAgreements"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OwnershipAgreements"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/ownershipagreements/{id}": {
      "get": {
        "summary": "Get an ownership agreement by ID",
        "tags": [
          "OwnershipAgreements"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ownership agreement",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OwnershipAgreements"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "put": {
        "summary": "Update an ownership agreement",
        "tags": [
          "OwnershipAgreements"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OwnershipAgreements"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "summary": "Delete an ownership agreement",
        "tags": [
          "OwnershipAgreements"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/page": {
      "get": {
        "summary": "Get all pages",
        "tags": [
          "Page"
        ],
        "responses": {
          "200": {
            "description": "List of pages",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageArray"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a page",
        "tags": [
          "Page"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Page"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/page/{id}": {
      "get": {
        "summary": "Get a page by ID",
        "tags": [
          "Page"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Page",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "put": {
        "summary": "Update a page",
        "tags": [
          "Page"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Page"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a page",
        "tags": [
          "Page"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/performancemetrics": {
      "get": {
        "summary": "Get all performance metrics records",
        "tags": [
          "PerformanceMetrics"
        ],
        "responses": {
          "200": {
            "description": "List of performance metrics records",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceMetricsArray"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a performance metrics record",
        "tags": [
          "PerformanceMetrics"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceMetrics"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/performancemetrics/{id}": {
      "get": {
        "summary": "Get a performance metrics record by ID",
        "tags": [
          "PerformanceMetrics"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Performance metrics record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceMetrics"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "put": {
        "summary": "Update a performance metrics record",
        "tags": [
          "PerformanceMetrics"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceMetrics"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a performance metrics record",
        "tags": [
          "PerformanceMetrics"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/returnhistory": {
      "get": {
        "summary": "Get all return history records",
        "tags": [
          "ReturnHistory"
        ],
        "responses": {
          "200": {
            "description": "List of return history records",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReturnHistoryArray"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a return history record",
        "tags": [
          "ReturnHistory"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReturnHistory"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/returnhistory/{id}": {
      "get": {
        "summary": "Get a return history record by ID",
        "tags": [
          "ReturnHistory"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return history record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReturnHistory"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "put": {
        "summary": "Update a return history record",
        "tags": [
          "ReturnHistory"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReturnHistory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a return history record",
        "tags": [
          "ReturnHistory"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/role": {
      "get": {
        "summary": "Get all roles",
        "tags": [
          "Role"
        ],
        "responses": {
          "200": {
            "description": "List of roles",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleArray"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a role",
        "tags": [
          "Role"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/role/{id}": {
      "get": {
        "summary": "Get a role by ID",
        "tags": [
          "Role"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "put": {
        "summary": "Update a role",
        "tags": [
          "Role"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a role",
        "tags": [
          "Role"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/rolePageAccess": {
      "get": {
        "summary": "Get all role page access records",
        "tags": [
          "RolePageAccess"
        ],
        "responses": {
          "200": {
            "description": "List of role page access records",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RolePageAccessArray"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a role page access record",
        "tags": [
          "RolePageAccess"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RolePageAccess"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/rolePageAccess/{id}": {
      "get": {
        "summary": "Get a role page access record by ID",
        "tags": [
          "RolePageAccess"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role page access record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RolePageAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "put": {
        "summary": "Update a role page access record",
        "tags": [
          "RolePageAccess"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RolePageAccess"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a role page access record",
        "tags": [
          "RolePageAccess"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/sales": {
      "get": {
        "summary": "Get all sales records",
        "tags": [
          "Sales"
        ],
        "responses": {
          "200": {
            "description": "List of sales records",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesArray"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a sales record",
        "tags": [
          "Sales"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Sales"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/sales/{id}": {
      "get": {
        "summary": "Get a sales record by ID",
        "tags": [
          "Sales"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sales record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sales"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "put": {
        "summary": "Update a sales record",
        "tags": [
          "Sales"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Sales"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a sales record",
        "tags": [
          "Sales"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/shippinglog": {
      "get": {
        "summary": "Get all shipping log records",
        "tags": [
          "ShippingLog"
        ],
        "responses": {
          "200": {
            "description": "List of shipping log records",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingLogArray"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a shipping log record",
        "tags": [
          "ShippingLog"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShippingLog"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/shippinglog/{id}": {
      "get": {
        "summary": "Get a shipping log record by ID",
        "tags": [
          "ShippingLog"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Shipping log record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingLog"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "put": {
        "summary": "Update a shipping log record",
        "tags": [
          "ShippingLog"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShippingLog"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a shipping log record",
        "tags": [
          "ShippingLog"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/user": {
      "get": {
        "summary": "Get all users",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserArray"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a user",
        "tags": [
          "User"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "summary": "Get a user by ID",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "put": {
        "summary": "Update a user",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a user",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/application_account": {
      "get": {
        "summary": "Get all application accounts",
        "tags": [
          "ApplicationAccount"
        ],
        "responses": {
          "200": {
            "description": "List of application accounts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationAccountArray"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create an application account",
        "tags": [
          "ApplicationAccount"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationAccount"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/application_account/{user_account_id}": {
      "get": {
        "summary": "Get an application account by ID",
        "tags": [
          "ApplicationAccount"
        ],
        "parameters": [
          {
            "name": "user_account_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ApplicationAccount",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationAccount"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "put": {
        "summary": "Update an application account",
        "tags": [
          "ApplicationAccount"
        ],
        "parameters": [
          {
            "name": "user_account_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationAccount"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "summary": "Delete an application account",
        "tags": [
          "ApplicationAccount"
        ],
        "parameters": [
          {
            "name": "user_account_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/listings": {
      "get": {
        "summary": "List listings",
        "tags": [
          "Listing"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200,
              "default": 50
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Listing collection",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListingList"
                },
                "example": {
                  "listings": [
                    {
                      "listing_id": 1,
                      "title": "Sample",
                      "listing_price": 19.99,
                      "status": "draft"
                    }
                  ],
                  "total": 1,
                  "page": 1,
                  "pageSize": 50
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create listing",
        "tags": [
          "Listing"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListingCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Listing"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/listings/{id}": {
      "get": {
        "summary": "Get listing",
        "tags": [
          "Listing"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Listing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Listing"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update listing",
        "tags": [
          "Listing"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListingUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Listing"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete listing",
        "tags": [
          "Listing"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/listings/{id}/details": {
      "get": {
        "summary": "Get listing aggregated details",
        "tags": [
          "Listing"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Listing details payload",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/ebay/metrics": {
      "get": {
        "summary": "Get eBay integration metrics snapshot",
        "tags": [
          "eBay Admin"
        ],
        "security": [
          {
            "AdminHeaderAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Metrics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricsSnapshot"
                },
                "example": {
                  "counters": {
                    "drift.detected": 12,
                    "queue.processed": 150
                  },
                  "gauges": {
                    "queue.depth": 3
                  },
                  "timestamps": {
                    "lastDriftDetected": "2025-08-18T10:00:00Z"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": "internal_error",
                  "message": "Unexpected failure"
                }
              }
            }
          }
        }
      }
    },
    "/admin/ebay/health": {
      "get": {
        "summary": "Get eBay integration health summary",
        "tags": [
          "eBay Admin"
        ],
        "security": [
          {
            "AdminHeaderAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Health",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthSummary"
                },
                "example": {
                  "featureFlags": {
                    "DRIFT_RETENTION_ENABLED": true
                  },
                  "metrics": {
                    "queue.depth": 3
                  },
                  "summary": {
                    "changeDetector.msSinceLastRun": 5231,
                    "retention.msSinceLastRun": 86400000
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/ebay/transactions": {
      "get": {
        "summary": "List transaction log entries",
        "tags": [
          "eBay Admin"
        ],
        "security": [
          {
            "AdminHeaderAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "channel",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "operation",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ebay_listing_id",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "from",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "to",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer",
              "default": 0
            }
          },
          {
            "in": "query",
            "name": "format",
            "schema": {
              "type": "string",
              "enum": [
                "json",
                "csv"
              ],
              "default": "json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transactions JSON or CSV",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionList"
                },
                "example": {
                  "items": [
                    {
                      "txn_id": 1,
                      "ebay_listing_id": 10,
                      "operation": "CREATE_LISTING",
                      "status": "success",
                      "latency_ms": 345,
                      "created_at": "2025-08-18T09:59:00Z"
                    }
                  ],
                  "pagination": {
                    "limit": 100,
                    "offset": 0,
                    "count": 1,
                    "total": 250
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/ebay/queue": {
      "get": {
        "summary": "List change queue items",
        "tags": [
          "eBay Admin"
        ],
        "security": [
          {
            "AdminHeaderAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Queue items",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueueItemList"
                },
                "example": {
                  "items": [
                    {
                      "queue_id": 101,
                      "ebay_listing_id": 10,
                      "intent": "updatePrice",
                      "status": "pending"
                    }
                  ],
                  "pagination": {
                    "limit": 100,
                    "offset": 0,
                    "count": 1,
                    "total": 4
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/ebay/queue/{id}/retry": {
      "post": {
        "summary": "Retry a queue item",
        "tags": [
          "eBay Admin"
        ],
        "security": [
          {
            "AdminHeaderAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retried"
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": "not_found",
                  "message": "Queue item not found"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/ebay/queue/dead-letter": {
      "get": {
        "summary": "List dead queue + failed events",
        "tags": [
          "eBay Admin"
        ],
        "security": [
          {
            "AdminHeaderAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Dead letters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeadLetterSet"
                },
                "example": {
                  "dead": [],
                  "failed": [
                    {
                      "failed_event_id": 5,
                      "ebay_listing_id": 11,
                      "intent": "updateQuantity",
                      "last_error": "timeout"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/admin/ebay/failed-events/{id}/replay": {
      "post": {
        "summary": "Replay failed event",
        "tags": [
          "eBay Admin"
        ],
        "security": [
          {
            "AdminHeaderAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Replayed"
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/ebay/snapshots": {
      "get": {
        "summary": "List snapshots",
        "tags": [
          "eBay Admin"
        ],
        "security": [
          {
            "AdminHeaderAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "ebay_listing_id",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Snapshots",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotList"
                },
                "example": {
                  "items": [
                    {
                      "snapshot_id": 10,
                      "ebay_listing_id": 1,
                      "snapshot_hash": "abc123",
                      "created_at": "2025-08-18T09:00:00Z"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/admin/ebay/snapshots/{id}": {
      "get": {
        "summary": "Get snapshot by id",
        "tags": [
          "eBay Admin"
        ],
        "security": [
          {
            "AdminHeaderAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Snapshot",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EbayListingSnapshot"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/ebay/snapshots/{a}/diff/{b}": {
      "get": {
        "summary": "Diff two snapshots",
        "tags": [
          "eBay Admin"
        ],
        "security": [
          {
            "AdminHeaderAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "a",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "b",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Diff",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "added": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "removed": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "changed": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/ebay/sync/logs": {
      "get": {
        "summary": "List sync log entries",
        "tags": [
          "eBay Admin"
        ],
        "security": [
          {
            "AdminHeaderAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Sync logs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/ebay/policies": {
      "get": {
        "summary": "List cached policies",
        "tags": [
          "eBay Admin"
        ],
        "security": [
          {
            "AdminHeaderAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Policies",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/ebay/drift-events": {
      "get": {
        "summary": "List drift events",
        "tags": [
          "eBay Admin"
        ],
        "security": [
          {
            "AdminHeaderAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "classification",
            "schema": {
              "type": "string",
              "enum": [
                "internal_only",
                "external_only",
                "both_changed",
                "snapshot_stale"
              ]
            }
          },
          {
            "in": "query",
            "name": "listingId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "fromMs",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "toMs",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Drift events",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DriftEventsList"
                },
                "example": {
                  "items": [
                    {
                      "drift_event_id": 1,
                      "ebay_listing_id": 10,
                      "classification": "external_only",
                      "created_at": "2025-08-18T10:00:00Z"
                    }
                  ],
                  "pagination": {
                    "limit": 100,
                    "offset": 0,
                    "count": 1,
                    "total": 53
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/ebay/drift-events/summary": {
      "get": {
        "summary": "Drift classification counts",
        "tags": [
          "eBay Admin"
        ],
        "security": [
          {
            "AdminHeaderAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Counts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DriftSummary"
                },
                "example": {
                  "counts": {
                    "external_only": 20,
                    "internal_only": 5,
                    "both_changed": 3,
                    "snapshot_stale": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/ebay/drift-events/retention/run": {
      "post": {
        "summary": "Trigger drift retention",
        "tags": [
          "eBay Admin"
        ],
        "security": [
          {
            "AdminHeaderAuth": []
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "retentionDays": {
                    "type": "integer",
                    "minimum": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Retention result",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetentionResult"
                },
                "example": {
                  "deleted": 42,
                  "retentionDays": 30,
                  "cutoff": "2025-07-19T00:00:00Z",
                  "skipped": false
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/ebay/retrieve": {
      "post": {
        "summary": "Ingest raw eBay listing payloads (comma-separated IDs) and persist raw data.",
        "description": "Retrieves raw listing payloads from eBay. When dryRun=true, nothing is written to the database; the summary reflects the simulated outcome.",
        "tags": [
          "eBay Admin"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "itemIds": {
                    "type": "string",
                    "description": "Comma or whitespace separated list of eBay listing item IDs."
                  },
                  "dryRun": {
                    "type": "boolean",
                    "default": true
                  }
                },
                "required": [
                  "itemIds"
                ],
                "example": {
                  "itemIds": "101,102,103",
                  "dryRun": true
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful retrieval (real or simulated).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "dryRun": {
                      "type": "boolean"
                    },
                    "summary": {
                      "$ref": "#/components/schemas/RawIngestionSummary"
                    }
                  },
                  "required": [
                    "dryRun",
                    "summary"
                  ],
                  "example": {
                    "dryRun": true,
                    "summary": {
                      "requested": 3,
                      "fetched": 3,
                      "succeeded": 3,
                      "inserted": 0,
                      "duplicates": 0,
                      "skipped": 0,
                      "errors": 0,
                      "invalidIds": 0,
                      "transientErrors": 0,
                      "permanentErrors": 0,
                      "retries": 0,
                      "backpressureDelays": 1,
                      "avgAttempts": 1,
                      "durationMs": 842
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error (missing or invalid itemIds).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": "no_item_ids",
                  "message": "At least one itemId is required"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": "internal_error",
                  "message": "Unexpected failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/ebay/map/run": {
      "post": {
        "summary": "Execute the raw->domain mapping pipeline over new/unmapped items.",
        "description": "Runs the mapping pass. When dryRun=true, performs read-only simulation and returns a summary without persisting domain entities.",
        "tags": [
          "eBay Admin"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dryRun": {
                    "type": "boolean",
                    "default": true
                  },
                  "maxItems": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "Optional cap on number of raw items to map this run."
                  }
                },
                "example": {
                  "dryRun": true,
                  "maxItems": 500
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Mapping run completed (success, partial, or failed).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "dryRun": {
                      "type": "boolean"
                    },
                    "exitCode": {
                      "type": "integer",
                      "description": "0=success, >0 indicates partial or failure."
                    },
                    "summary": {
                      "$ref": "#/components/schemas/MappingRunSummary"
                    },
                    "logs": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Key log lines or messages from the run."
                    }
                  },
                  "required": [
                    "dryRun",
                    "exitCode",
                    "summary"
                  ],
                  "example": {
                    "dryRun": false,
                    "exitCode": 0,
                    "summary": {
                      "status": "success",
                      "startedAt": "2025-08-20T12:34:56.000Z",
                      "finishedAt": "2025-08-20T12:34:59.200Z",
                      "durationMs": 3200,
                      "processed": 450,
                      "mapped": 450,
                      "skipped": 0,
                      "errors": 0,
                      "selected": 450,
                      "dryRun": false,
                      "limit": 500
                    },
                    "logs": [
                      "Starting mapping run...",
                      "Processed 450 items",
                      "Mapping run complete"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": "invalid_maxItems",
                  "message": "maxItems must be a positive integer"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": "spawn_failed",
                  "message": "Failed to spawn mapping process"
                }
              }
            }
          },
          "504": {
            "description": "Mapping run timed out.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": "mapping_timeout",
                  "message": "Mapping run exceeded timeout"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AppConfig": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "config_key": {
            "type": "string"
          },
          "config_value": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "config_key"
        ]
      },
      "AppConfigArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AppConfig"
        }
      },
      "Catalog": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "description": {
            "type": "string"
          },
          "manufacturer": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "serial_number": {
            "type": "string"
          },
          "sku": {
            "type": "string"
          },
          "barcode": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "sku"
        ]
      },
      "CatalogArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Catalog"
        }
      },
      "CommunicationLogs": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "customer_id": {
            "type": "integer"
          },
          "sales_id": {
            "type": "integer"
          },
          "communication_date": {
            "type": "string",
            "format": "date-time"
          },
          "channel": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "response": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "customer_id",
          "communication_date"
        ]
      },
      "CommunicationLogsArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CommunicationLogs"
        }
      },
      "Customer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "email"
        ]
      },
      "CustomerArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Customer"
        }
      },
      "DatabaseConfiguration": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "config_name": {
            "type": "string"
          },
          "config_value": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "config_name"
        ]
      },
      "DatabaseConfigurationArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DatabaseConfiguration"
        }
      },
      "EbayInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "account_id": {
            "type": "string"
          },
          "store_name": {
            "type": "string"
          },
          "feedback_score": {
            "type": "integer"
          },
          "positive_feedback_percent": {
            "type": "number",
            "format": "float"
          },
          "seller_level": {
            "type": "string"
          },
          "defect_rate": {
            "type": "number",
            "format": "float"
          },
          "late_shipment_rate": {
            "type": "number",
            "format": "float"
          },
          "transaction_defect_rate": {
            "type": "number",
            "format": "float"
          },
          "policy_compliance_status": {
            "type": "string"
          },
          "selling_limits": {
            "type": "object"
          },
          "api_status": {
            "type": "string"
          },
          "last_sync": {
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "account_id"
        ]
      },
      "EbayInfoArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EbayInfo"
        }
      },
      "FinancialTracking": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "sales_id": {
            "type": "integer"
          },
          "payment_received": {
            "type": "number",
            "format": "decimal"
          },
          "payment_date": {
            "type": "string",
            "format": "date-time"
          },
          "payout_status": {
            "type": "string"
          },
          "payout_date": {
            "type": "string",
            "format": "date-time"
          },
          "fees": {
            "type": "number",
            "format": "decimal"
          },
          "net_amount": {
            "type": "number",
            "format": "decimal"
          },
          "notes": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "sales_id"
        ]
      },
      "FinancialTrackingArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/FinancialTracking"
        }
      },
      "Listing": {
        "type": "object",
        "properties": {
          "listing_id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "listing_price": {
            "type": "number",
            "format": "float"
          },
          "item_id": {
            "type": "integer"
          },
          "ownership_id": {
            "type": "integer",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Dynamic; see /api/listings/status/workflow"
          },
          "watchers": {
            "type": "integer"
          },
          "item_condition_description": {
            "type": "string"
          },
          "payment_method": {
            "type": "string"
          },
          "shipping_method": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ListingArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Listing"
        }
      },
      "OrderDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "sales_id": {
            "type": "integer"
          },
          "item_id": {
            "type": "integer"
          },
          "quantity": {
            "type": "integer"
          },
          "unit_price": {
            "type": "number",
            "format": "decimal"
          },
          "discount": {
            "type": "number",
            "format": "decimal"
          },
          "tax": {
            "type": "number",
            "format": "decimal"
          },
          "total": {
            "type": "number",
            "format": "decimal"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "sales_id",
          "item_id",
          "quantity",
          "unit_price"
        ]
      },
      "OrderDetailsArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/OrderDetails"
        }
      },
      "Ownership": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "user_account_id": {
            "type": "integer"
          },
          "catalog_id": {
            "type": "integer"
          },
          "ownership_percentage": {
            "type": "number",
            "format": "float"
          },
          "ownership_type": {
            "type": "string"
          },
          "agreement_id": {
            "type": "integer"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "user_account_id",
          "catalog_id",
          "ownership_percentage"
        ]
      },
      "OwnershipArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Ownership"
        }
      },
      "OwnershipAgreements": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "agreement_name": {
            "type": "string"
          },
          "agreement_type": {
            "type": "string"
          },
          "start_date": {
            "type": "string",
            "format": "date-time"
          },
          "end_date": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "agreement_name",
          "agreement_type"
        ]
      },
      "OwnershipAgreementsArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/OwnershipAgreements"
        }
      },
      "Page": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "PageArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Page"
        }
      },
      "PerformanceMetrics": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "user_account_id": {
            "type": "integer"
          },
          "metric_date": {
            "type": "string",
            "format": "date-time"
          },
          "metric_type": {
            "type": "string"
          },
          "metric_value": {
            "type": "number",
            "format": "decimal"
          },
          "notes": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "user_account_id",
          "metric_date"
        ]
      },
      "PerformanceMetricsArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PerformanceMetrics"
        }
      },
      "ReturnHistory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "sales_id": {
            "type": "integer"
          },
          "return_date": {
            "type": "string",
            "format": "date-time"
          },
          "reason": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "refund_amount": {
            "type": "number",
            "format": "decimal"
          },
          "notes": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "sales_id",
          "return_date"
        ]
      },
      "ReturnHistoryArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ReturnHistory"
        }
      },
      "Role": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "RoleArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Role"
        }
      },
      "RolePageAccess": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "role_id": {
            "type": "integer"
          },
          "page_id": {
            "type": "integer"
          },
          "access": {
            "type": "string",
            "enum": [
              "none",
              "read",
              "read_write",
              "read_write_create",
              "full"
            ]
          }
        },
        "required": [
          "role_id",
          "page_id",
          "access"
        ]
      },
      "RolePageAccessArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/RolePageAccess"
        }
      },
      "Sales": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "listing_id": {
            "type": "integer"
          },
          "sold_price": {
            "type": "number",
            "format": "decimal"
          },
          "soldDate": {
            "type": "string",
            "format": "date-time"
          },
          "sold_shipping_collected": {
            "type": "number",
            "format": "decimal"
          },
          "taxes": {
            "type": "number",
            "format": "decimal"
          },
          "owner_id": {
            "type": "integer"
          },
          "negotiated_terms": {
            "type": "string"
          },
          "negotiated_terms_calculation": {
            "type": "number",
            "format": "decimal"
          },
          "sales_channel": {
            "type": "string"
          },
          "customer_feedback": {
            "type": "string"
          }
        },
        "required": [
          "listing_id",
          "sold_price"
        ]
      },
      "SalesArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Sales"
        }
      },
      "ShippingLog": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "sales_id": {
            "type": "integer"
          },
          "carrier": {
            "type": "string"
          },
          "tracking_number": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "shipped_date": {
            "type": "string",
            "format": "date-time"
          },
          "delivered_date": {
            "type": "string",
            "format": "date-time"
          },
          "notes": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "sales_id"
        ]
      },
      "ShippingLogArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ShippingLog"
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "role_id": {
            "type": "integer"
          },
          "status": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "username",
          "email",
          "password"
        ]
      },
      "UserArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/User"
        }
      },
      "ApplicationAccount": {
        "type": "object",
        "properties": {
          "user_account_id": {
            "type": "integer"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password_hash": {
            "type": "string"
          },
          "role_id": {
            "type": "integer"
          },
          "status": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "username",
          "email",
          "password_hash"
        ]
      },
      "ApplicationAccountArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ApplicationAccount"
        }
      },
      "ListingCreate": {
        "type": "object",
        "required": [
          "title",
          "listing_price",
          "item_id"
        ],
        "properties": {
          "title": {
            "type": "string"
          },
          "listing_price": {
            "type": "number"
          },
          "item_id": {
            "type": "integer"
          },
          "ownership_id": {
            "type": "integer"
          },
          "status": {
            "type": "string",
            "description": "Optional initial status (defaults to draft)"
          }
        }
      },
      "ListingUpdate": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "listing_price": {
            "type": "number"
          },
          "status": {
            "type": "string"
          },
          "ownership_id": {
            "type": "integer"
          }
        }
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer"
          },
          "offset": {
            "type": "integer"
          },
          "count": {
            "type": "integer"
          },
          "total": {
            "type": "integer"
          }
        }
      },
      "EbayChangeQueue": {
        "type": "object",
        "properties": {
          "queue_id": {
            "type": "integer"
          },
          "ebay_listing_id": {
            "type": "integer"
          },
          "intent": {
            "type": "string"
          },
          "payload_hash": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "priority": {
            "type": "integer"
          },
          "attempts": {
            "type": "integer"
          },
          "error_reason": {
            "type": "string"
          },
          "next_earliest_run_at": {
            "type": "string",
            "format": "date-time"
          },
          "last_attempt_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EbayFailedEvent": {
        "type": "object",
        "properties": {
          "failed_event_id": {
            "type": "integer"
          },
          "ebay_listing_id": {
            "type": "integer"
          },
          "intent": {
            "type": "string"
          },
          "payload_hash": {
            "type": "string"
          },
          "request_payload": {
            "type": "object"
          },
          "last_error": {
            "type": "string"
          },
          "attempts": {
            "type": "integer"
          },
          "last_attempt_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EbayListingSnapshot": {
        "type": "object",
        "properties": {
          "snapshot_id": {
            "type": "integer"
          },
          "ebay_listing_id": {
            "type": "integer"
          },
          "snapshot_hash": {
            "type": "string"
          },
          "snapshot_json": {
            "type": "object"
          },
          "diff_from_prev_json": {
            "type": "object"
          },
          "source_event": {
            "type": "string"
          },
          "dedup_of_snapshot_id": {
            "type": "integer"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EbayTransactionLog": {
        "type": "object",
        "properties": {
          "txn_id": {
            "type": "integer"
          },
          "ebay_listing_id": {
            "type": "integer"
          },
          "correlation_id": {
            "type": "string"
          },
          "direction": {
            "type": "string"
          },
          "channel": {
            "type": "string"
          },
          "operation": {
            "type": "string"
          },
          "request_url": {
            "type": "string"
          },
          "request_method": {
            "type": "string"
          },
          "request_body": {
            "type": "object"
          },
          "response_code": {
            "type": "integer"
          },
          "response_body": {
            "type": "object"
          },
          "status": {
            "type": "string"
          },
          "error_classification": {
            "type": "string"
          },
          "latency_ms": {
            "type": "integer"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EbayDriftEvent": {
        "type": "object",
        "properties": {
          "drift_event_id": {
            "type": "integer"
          },
          "ebay_listing_id": {
            "type": "integer"
          },
          "classification": {
            "type": "string",
            "enum": [
              "internal_only",
              "external_only",
              "both_changed",
              "snapshot_stale"
            ]
          },
          "local_hash": {
            "type": "string"
          },
          "remote_hash": {
            "type": "string"
          },
          "snapshot_hash": {
            "type": "string"
          },
          "details_json": {
            "type": "object"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "error",
          "message"
        ]
      },
      "HealthSummary": {
        "type": "object",
        "properties": {
          "featureFlags": {
            "type": "object"
          },
          "metrics": {
            "type": "object"
          },
          "summary": {
            "type": "object"
          }
        }
      },
      "MetricsSnapshot": {
        "type": "object",
        "properties": {
          "counters": {
            "type": "object"
          },
          "gauges": {
            "type": "object"
          },
          "timestamps": {
            "type": "object"
          }
        }
      },
      "TransactionList": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EbayTransactionLog"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        }
      },
      "QueueItemList": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EbayChangeQueue"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        }
      },
      "DeadLetterSet": {
        "type": "object",
        "properties": {
          "dead": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EbayChangeQueue"
            }
          },
          "failed": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EbayFailedEvent"
            }
          }
        }
      },
      "SnapshotList": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EbayListingSnapshot"
            }
          }
        }
      },
      "DriftEventsList": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EbayDriftEvent"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        }
      },
      "DriftSummary": {
        "type": "object",
        "properties": {
          "counts": {
            "type": "object",
            "additionalProperties": {
              "type": "integer"
            }
          }
        }
      },
      "RetentionResult": {
        "type": "object",
        "properties": {
          "deleted": {
            "type": "integer"
          },
          "retentionDays": {
            "type": "integer"
          },
          "cutoff": {
            "type": "string",
            "format": "date-time"
          },
          "skipped": {
            "type": "boolean"
          }
        }
      },
      "ListingList": {
        "type": "object",
        "properties": {
          "listings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Listing"
            }
          },
          "total": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "pageSize": {
            "type": "integer"
          }
        }
      },
      "StatusWorkflowGraph": {
        "type": "object",
        "properties": {
          "graph": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "StatusWorkflowGraphUpdate": {
        "type": "object",
        "properties": {
          "graph": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "graph"
        ]
      },
      "RawIngestionSummary": {
        "type": "object",
        "properties": {
          "requested": {
            "type": "integer",
            "description": "Count of IDs provided in the request."
          },
          "fetched": {
            "type": "integer",
            "description": "Count of IDs successfully fetched from eBay API."
          },
          "succeeded": {
            "type": "integer",
            "description": "Count of raw payloads successfully processed (pre-insert)."
          },
          "inserted": {
            "type": "integer",
            "description": "Number of new raw rows inserted (non-dry run)."
          },
          "duplicates": {
            "type": "integer",
            "description": "Rows skipped due to existing identical payload hash."
          },
          "skipped": {
            "type": "integer",
            "description": "Rows intentionally skipped (e.g., validation failure)."
          },
          "errors": {
            "type": "integer",
            "description": "Count of hard errors encountered per item."
          },
          "invalidIds": {
            "type": "integer",
            "description": "Number of provided IDs failing basic validation regex."
          },
          "transientErrors": {
            "type": "integer",
            "description": "Errors deemed retryable (may have succeeded after retry)."
          },
          "permanentErrors": {
            "type": "integer",
            "description": "Errors deemed non-retryable resulting in item failure."
          },
          "retries": {
            "type": "integer",
            "description": "Total retry attempts performed across all items."
          },
          "backpressureDelays": {
            "type": "integer",
            "description": "Number of times ingestion paused due to near rate limit depletion."
          },
          "avgAttempts": {
            "type": "number",
            "format": "float",
            "description": "Average fetch attempts per successfully fetched item (includes initial)."
          },
          "durationMs": {
            "type": "integer",
            "description": "Total elapsed time of retrieval in milliseconds."
          },
          "errorSamples": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Subset of representative error messages (truncated)."
          }
        },
        "required": [
          "requested",
          "fetched",
          "succeeded",
          "inserted",
          "duplicates",
          "skipped",
          "errors",
          "invalidIds",
          "durationMs"
        ]
      },
      "MappingRunSummary": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success",
              "partial",
              "failed"
            ],
            "description": "Overall result classification."
          },
          "startedAt": {
            "type": "string",
            "format": "date-time"
          },
          "finishedAt": {
            "type": "string",
            "format": "date-time"
          },
          "durationMs": {
            "type": "integer"
          },
          "processed": {
            "type": "integer",
            "description": "Total raw records examined."
          },
          "mapped": {
            "type": "integer",
            "description": "Successfully mapped into domain entities."
          },
          "skipped": {
            "type": "integer",
            "description": "Dropped or already mapped."
          },
          "errors": {
            "type": "integer",
            "description": "Count of mapping failures."
          },
          "selected": {
            "type": "integer",
            "description": "Raw rows selected for this run prior to filtering (matches processed + maybe early filtered)."
          },
          "dryRun": {
            "type": "boolean",
            "description": "Whether the mapping run executed in dry-run mode (duplicated at top-level for convenience)."
          },
          "limit": {
            "type": "integer",
            "description": "Batch processing limit used for this run."
          },
          "errorSamples": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Representative errors (may be truncated)."
          }
        },
        "required": [
          "status",
          "startedAt",
          "finishedAt",
          "durationMs",
          "processed",
          "mapped",
          "skipped",
          "errors",
          "selected",
          "dryRun"
        ]
      }
    },
    "securitySchemes": {
      "AdminHeaderAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-Admin-Auth"
      },
      "AdminApiKey": {
        "type": "apiKey",
        "in": "header",
        "name": "X-Admin-Auth",
        "description": "Admin API key required for protected /api/admin/ebay endpoints."
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Unauthorized – missing or invalid admin API key",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Unauthorized"
                }
              }
            }
          }
        }
      },
      "ForbiddenError": {
        "description": "Forbidden – authenticated but lacking permission",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                }
              }
            }
          }
        }
      }
    }
  }
}