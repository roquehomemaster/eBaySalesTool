{
  "name": "listflowhq-backend",
  "version": "1.0.0",
  "description": "Backend for ListFlowHQ: listing management & channel sync platform (initial eBay).",
  "main": "src/app.js",
  "scripts": {
    "start": "node --max-old-space-size=4096 src/app.js",
    "dev": "nodemon --exec 'node --max-old-space-size=4096' src/app.js",
    "prepare-lock": "npm install --package-lock-only",
    "test": "jest --runInBand --detectOpenHandles=false",
  "test:detect-open-handles": "jest --runInBand --detectOpenHandles --maxWorkers=1",
  "build": "echo No backend build step (JS runtime)",
  "lint": "eslint src --ext .js",
  "test:ebay": "jest --runInBand src/integration/ebay/__tests__/ --detectOpenHandles=false",
  "import:raw:ingest": "node scripts/import/ingestRawEbayListings.js",
  "import:raw:map": "node scripts/import/mapPendingRawListings.js",
  "verify:deps": "node -e \"const f=require('fs');const p=require('./package.json');const forb=['mongoose','mongodb'];const deps={...p.dependencies,...p.devDependencies};const found=Object.keys(deps).filter(d=>forb.includes(d));if(found.length){console.error('Forbidden deps:',found.join(','));process.exit(1);}console.log('Dependencies OK');\""
  },
  "dependencies": {
    "axios": "^1.8.4",
    "cors": "^2.8.5",
    "dotenv": "^16.5.0",
    "express": "^5.1.0",
    "pg": "^8.16.2",
    "sequelize": "^6.32.1",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-dist": "^5.17.14",
    "swagger-ui-express": "^5.0.1",
    "winston": "^3.10.0"
  },
  "devDependencies": {
    "eslint": "^8.57.0",
    "jest": "^29.7.0",
    "jest-junit": "^16.0.0",
    "nodemon": "^2.0.7",
    "supertest": "^7.1.1"
  },
  "author": "Your Name",
  "license": "MIT",
  "services": {
    "backend": {
      "build": {
        "context": ".",
        "dockerfile": "./Dockerfile"
      },
      "ports": [
        "5000:5000"
      ],
      "volumes": [
        "./backend:/app",
        "/app/node_modules"
      ],
      "environment": [
        "NODE_ENV=development"
      ]
    },
    "frontend": {
      "build": {
        "context": "./frontend",
        "dockerfile": "./Dockerfile"
      },
      "ports": [
        "3000:3000"
      ],
      "volumes": [
        "./frontend:/app",
        "/app/node_modules"
      ],
      "environment": [
        "REACT_APP_API_URL=http://localhost:5000"
      ]
    }
  },
  "keywords": []
}
